package palvelinohjelmointi.Bookstore;

import static org.assertj.core.api.Assertions.assertThat;

import java.util.List;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest;
import org.springframework.test.context.junit4.SpringRunner;

import palvelinohjelmointi.Bookstore.domain.Book;
import palvelinohjelmointi.Bookstore.domain.BookRepository;
import palvelinohjelmointi.Bookstore.domain.Category;
import palvelinohjelmointi.Bookstore.domain.CategoryRepository;

@RunWith(SpringRunner.class)
@DataJpaTest
public class BookRepositoryTests {

    @Autowired
    private BookRepository repository;
    
    @Autowired
    private CategoryRepository crepository;

    @Test
    public void findByIsbnShouldReturnAuthor() {
       
    	crepository.save(new Category("Non Fiction"));
        Book book = new Book("Kari", "124567-8", "Java Book", "2018", crepository.findByName("Non Fiction").get(0));
    	repository.save(book);
    	 List<Book> books = repository.findByIsbn("124567-8");
        assertThat(books).hasSize(1);
        assertThat(books.get(0).getAuthor()).isEqualTo("Kari");
    }
    
    
    @Test
    public void createNewBook() {
    	Book book = new Book("Mickey", "1234567-1", "Java Book", "2018", new Category("Fiction"));
    	repository.save(book);
    	assertThat(book.getId()).isNotNull();
    }    

    
    @Test
    public void editBook(){
    	Book book = new Book("Mickey", "1234567-1", "Java Book", "2018", new Category("Fiction"));
    	repository.save(book);
    	assertThat(book.getTitle().equals("Java Book"));
    	System.out.println(book.getTitle());
    	repository.findOne(book.getId()).setTitle("Java Book edited");
    	repository.save(book);
    	System.out.println(book.getTitle());
    	assertThat(book.getTitle().equals("Java Book edited"));
    	   	    	
    }
    
    @Test
    public void deleteBook() {
    	Category category = crepository.save(new Category("Non Fiction"));
    	Book book = new Book("Kari", "124567-8", "Java Book", "2018", category);
    	assertThat(book.getId()).isNotNull();
 
    	repository.delete(book);
    	assertThat(book.getId()).isNull();
    	System.out.println(book.toString());
    }
}
