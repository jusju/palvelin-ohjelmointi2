package com.gallery.gallery.domain;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.context.annotation.Bean;
import org.springframework.core.io.Resource;
import org.springframework.core.io.ResourceLoader;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.util.FileCopyUtils;
import org.springframework.util.FileSystemUtils;
import org.springframework.web.multipart.MultipartFile;

@Service
public class PictureService {
	
	//target folder, where images will be uploaded to
	private static String UPLOAD_ROOT = "images";
	
	private final PictureRepository prepository;
	private final ResourceLoader resourceLoader;
	
	@Autowired
	public PictureService(PictureRepository prepository, ResourceLoader resourceLoader){
		
		this.prepository = prepository;
		this.resourceLoader = resourceLoader;
	}
	
	public Page<Picture> findPage(Pageable pageable) {
		return prepository.findAll(pageable);
	}

	public Resource findOnePicture(String filename) {
		return resourceLoader.getResource("file:" + UPLOAD_ROOT + "/" + filename);
	}
	
	public void createImage(MultipartFile file) throws IOException {
		
		if (!file.isEmpty()){
			Files.copy(file.getInputStream(), Paths.get(UPLOAD_ROOT, file.getOriginalFilename()));
			prepository.save(new Picture(file.getOriginalFilename()));
		}
	}
	
	public void deleteImage(String filename) throws IOException {
		final Picture byName = prepository.findByName(filename);
		prepository.delete(byName);
		Files.deleteIfExists(Paths.get(UPLOAD_ROOT, filename));
	}
	
	@Bean
	CommandLineRunner setUp(PictureRepository prepository){
		
		return (args)-> {
		FileSystemUtils.deleteRecursively(new File(UPLOAD_ROOT));
		
		Files.createDirectory(Paths.get(UPLOAD_ROOT));
		
		FileCopyUtils.copy("Test_File", new FileWriter(UPLOAD_ROOT + "/test"));
		prepository.save(new Picture("test"));
		
		FileCopyUtils.copy("Test_File2", new FileWriter(UPLOAD_ROOT + "/test2"));
		prepository.save(new Picture("test2"));
		
		FileCopyUtils.copy("Test_File3", new FileWriter(UPLOAD_ROOT + "/test3"));
		prepository.save(new Picture("test3"));
		};
}
}
